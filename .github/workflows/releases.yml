name: manual release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  release:
    runs-on: ubuntu-24.04

    name: Release ${{ inputs.version }}

    outputs:
      version: ${{ steps.version.outputs.version }}
      notes: ${{ steps.cleaned-notes.outputs.notes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove optional "v" prefix
        id: version
        run: |
          echo "version=${VERSION#v}" >> "$GITHUB_OUTPUT"
        env:
          VERSION: ${{ inputs.version }}

      - name: Update teecontrol.php version
        run: sed -i "s/Version: '.*'/Version: '${{ steps.version.outputs.version }}'/g" teecontrol.php

      - name: Update package.json version
        run: sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.version.outputs.version }}\"/g" package.json

      - name: Update readme.md version
        run: sed -i "s/Stable tag: '.*'/Stable tag: '${{ steps.version.outputs.version }}'/g" readme.txt

      - name: Commit version change
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update version to v${{ steps.version.outputs.version }}"

      - name: Generate release notes
        id: generated-notes
        uses: RedCrafter07/release-notes-action@main
        with:
          tag-name: v${{ steps.version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}

      - name: Cleanup release notes
        id: cleaned-notes
        run: |
          START_FROM=$(echo -n "$RELEASE_NOTES" | awk "/What's Changed/{ print NR; exit }" -)
          DROP_FROM_CONTRIBUTORS=$(echo -n "$RELEASE_NOTES" | awk "/New Contributors/{ print NR; exit }" -)
          DROP_FROM_FULL_CHANGELOG=$(echo -n "$RELEASE_NOTES" | awk "/Full Changelog/{ print NR; exit }" -)

          # Drop everything starting from "Full Changelog"
          if [ ! -z "$DROP_FROM_FULL_CHANGELOG" ]; then
              RELEASE_NOTES=$(echo -n "$RELEASE_NOTES" | sed "${DROP_FROM_FULL_CHANGELOG},$ d")
          fi

          # Drop everything starting from "New Contributors"
          if [ ! -z "$DROP_FROM_CONTRIBUTORS" ]; then
              RELEASE_NOTES=$(echo -n "$RELEASE_NOTES" | sed "${DROP_FROM_CONTRIBUTORS},$ d")
          fi

          # Drop the line "What's Changed"
          if [ ! -z "$START_FROM" ]; then
              RELEASE_NOTES=$(echo -n "$RELEASE_NOTES" | sed "${START_FROM}d")
          fi

          {
            echo 'notes<<EOF'
            echo "$RELEASE_NOTES"
            echo EOF
          } >> "$GITHUB_OUTPUT";
        env:
          RELEASE_NOTES: ${{ steps.generated-notes.outputs.release-notes }}
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Setup composer
        uses: ramsey/composer-install@v3
        with:
          composer-options: "--no-dev"

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Install NPM dependencies
        run: npm ci

      - name: Compile build
        run: npm run build

      - name: Zip plugin
        run: npm run plugin-zip

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          body: ${{ steps.cleaned-notes.outputs.notes }}
          target_commitish: ${{ github.ref_name }}
          make_latest: "${{ github.ref_name == github.event.repository.default_branch }}"
          files: 'teecontrol.zip'
